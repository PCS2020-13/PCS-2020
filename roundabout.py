###
# roundabout.py
#
# This file contains the Roundabout class and its subclasses Regular, Turbo
# and Magic. These are used to set up the roundabout simulation.
###

import numpy as np

class Roundabout():
    """ The superclass for every roundabout."""
    def __init__(self, name, grid):
        self.name = name
        self.grid = grid

    def get_area(self, points):
        """Provides the area (the square between 2 points) of the grid that is the actual roundabout as a list of coordinates.

        Arguments:
            points {list} -- The points in which the roundabout lies between.

        Returns:
            list -- The list of coordinates that contain the actual roundabout.
        """
        area = []

        # Each element in points is a tuple of 2 coordinates.
        # Each coordinate is a tuple of its x and y value.s
        for point in points:
            x1, y1 = point[0]
            x2, y2 = point[1]
            for i in range(x1, x2+1):
                for j in range(y1, y2+1):
                    area.append([i,j])
        return area

    def __str__(self):
        string = ''
        for i in self.grid:
            for j in i:
                if j == 0:
                    string += '* '
                elif j == 5:
                    string += '_ '
                elif j > 9:
                    string += str(j)
                else:
                    string += str(j) + ' '
            string += '\n'
        return string

class Regular(Roundabout):
    """The class for the regular roundabout containing the exceptions, actual roundabout area and the grid of the roundabout itself."""
    def __init__(self):
        self.exceptions = [[3, 11], [4, 12], [17, 3], [16, 4], [24, 16], [25, 17], [11, 25], [12, 24]]
        self.points = [((3, 3),(25, 25))]
        self.area = self.get_area(self.points)
        grid = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 3, 5, 5, 5, 5, 10,5, 5, 8, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 3, 0, 0, 0],
                              [0, 0, 0, 5, 3, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 6, 5, 5, 5, 5, 9, 5, 5, 3, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 10,0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [2, 5, 5, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 8, 5, 5, 1],
                              [2, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 5, 5, 5, 1],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [1, 5, 5, 5, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 5, 5, 5, 2],
                              [1, 5, 5, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 5, 5, 2],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 10,5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 3, 5, 5, 9, 5, 5, 5, 5, 6, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 3, 5, 0, 0, 0],
                              [0, 0, 0, 3, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 8, 5, 5, 10,5, 5, 5, 5, 3, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        Roundabout.__init__(self, "Regular", grid)


class Turbo(Roundabout):
    """The class for the Turbo roundabout containing the exceptions, actual roundabout area and the grid of the roundabout itself."""
    def __init__(self):
        self.exceptions = [[17, 3], [16, 4], [4, 11], [11, 25], [12, 24], [24, 17]]
        self.points = [((3, 3),(25, 25))]
        self.area = self.get_area(self.points)
        grid = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 7, 5, 5, 5, 5, 5, 5, 5, 3, 0, 0, 0],
                              [0, 0, 0, 3, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 3, 5, 0, 0, 0],
                              [0, 0, 0, 5, 3, 5, 5, 5, 5, 5, 5, 5, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [2, 5, 5, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 8, 5, 5, 1],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 5, 5, 5, 1],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [1, 5, 5, 5, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [1, 5, 5, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 5, 5, 2],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 5, 5, 5, 5, 5, 5, 5, 3, 5, 0, 0, 0],
                              [0, 0, 0, 5, 3, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 3, 0, 0, 0],
                              [0, 0, 0, 3, 5, 5, 5, 5, 5, 5, 5, 7, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        Roundabout.__init__(self, "Turbo", grid)


class Magic(Roundabout):
    """The class for the Magic roundabout containing the exceptions, actual roundabout area and the grid of the roundabout itself."""
    def __init__(self):
        self.outer_exceptions = [[25, 11], [25, 12], [17, 3], [17, 4], [12, 3], [11, 3], [3, 11], [4, 11], [3, 16], [3, 17],
                            [11, 24], [11, 25], [16, 25], [17, 25], [24, 17], [25, 17],
                            [24, 12], [16, 4], [12, 4], [4, 12], [4, 16], [12, 24], [16, 24], [24, 16]]
        self.inner_exceptions = [[17, 9], [16, 8], [9, 11], [8, 12], [11, 19], [12, 20], [19, 17], [20, 16]]
        self.exceptions = self.outer_exceptions + self.inner_exceptions
        self.points = [((3, 11), (9, 17)), ((11, 19), (17, 25)), ((19, 11), (25, 17)), ((11, 3), (17, 9))]
        self.area = self.get_area(self.points)
        grid = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 3, 5, 5, 5, 5, 10,5, 5, 8, 5, 5, 5, 5, 8, 8, 5, 5, 5, 5, 5, 5, 5, 3, 0, 0, 0],
                              [0, 0, 0, 5, 3, 5, 5, 5, 5, 5, 5, 8, 8, 5, 5, 5, 8, 5, 5, 5, 5, 9, 5, 5, 3, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 9, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 7, 5, 5, 5, 8, 9, 5, 5, 4, 5, 5, 5, 7, 0, 0, 0, 5, 10,0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 5, 7, 5, 8, 5, 5, 5, 10,5, 4, 5, 7, 5, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0],
                              [2, 5, 5, 8, 5, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 5, 5, 5, 5, 8, 8, 5, 5, 1],
                              [2, 5, 5, 8, 8, 5, 5, 5, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 8, 5, 5, 5, 8, 5, 5, 5, 1],
                              [0, 0, 0, 5, 5, 0, 0, 0, 5, 10,0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10,5, 0, 0, 0, 5, 5, 0, 0, 0],
                              [1, 5, 5, 5, 8, 5, 5, 5, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 5, 5, 5, 8, 8, 5, 5, 2],
                              [1, 5, 5, 8, 8, 5, 5, 5, 5, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 8, 5, 5, 2],
                              [0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 5, 7, 5, 4, 5, 10,5, 5, 5, 8, 5, 7, 5, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 10,5, 0, 0, 0, 7, 5, 5, 5, 4, 5, 5, 9, 8, 5, 5, 5, 7, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 9, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],
                              [0, 0, 0, 5, 3, 5, 5, 9, 5, 5, 5, 5, 8, 5, 5, 5, 8, 8, 5, 5, 5, 5, 5, 5, 3, 5, 0, 0, 0],
                              [0, 0, 0, 3, 5, 5, 5, 5, 5, 5, 5, 8, 8, 5, 5, 5, 5, 8, 5, 5, 10,5, 5, 5, 5, 3, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        Roundabout.__init__(self, "Magic", grid)
